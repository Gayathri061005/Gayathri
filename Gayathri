import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from collections import Counter
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error

# Load the dataset
df = pd.read_csv("/IMDB-Movie-Data.csv")

# Set plot style
sns.set(style="whitegrid")

# 1. Trend Analysis: Average rating and revenue over years
trend_df = df.groupby("Year")[["Rating", "Revenue (Millions)"]].mean().reset_index()

plt.figure(figsize=(12, 5))
plt.subplot(1, 2, 1)
sns.lineplot(data=trend_df, x="Year", y="Rating", marker="o")
plt.title("Average Movie Rating Over Years")
plt.xticks(rotation=45)

plt.subplot(1, 2, 2)
sns.lineplot(data=trend_df, x="Year", y="Revenue (Millions)", marker="o", color="green")
plt.title("Average Revenue Over Years (Millions)")
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()

# 2. Visualization: Genre Distribution
genre_counts = Counter()
df["Genre"].dropna().apply(lambda x: genre_counts.update(x.split(",")))
genre_df = pd.DataFrame(genre_counts.items(), columns=["Genre", "Count"]).sort_values(by="Count", ascending=False)

plt.figure(figsize=(10, 6))
sns.barplot(data=genre_df.head(10), x="Count", y="Genre", palette="viridis")
plt.title("Top 10 Most Common Genres")
plt.show()

# 3. Data Cleaning
cleaned_df = df.copy()
cleaned_df["Revenue (Millions)"].fillna(cleaned_df["Revenue (Millions)"].median(), inplace=True)
cleaned_df["Metascore"].fillna(cleaned_df["Metascore"].median(), inplace=True)

# 4. Predictive Modeling: Predict Rating
features = cleaned_df[["Runtime (Minutes)", "Revenue (Millions)"]]
target = cleaned_df["Rating"]

X_train, X_test, y_train, y_test = train_test_split(features, target, test_size=0.2, random_state=42)

model = LinearRegression()
model.fit(X_train, y_train)
predictions = model.predict(X_test)
mse = mean_squared_error(y_test, predictions)

print("Model Coefficients:", model.coef_)
print("Model Intercept:", model.intercept_)
print("Mean Squared Error:", mse)
